% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RevoBenchmark.R
\name{RevoBenchmark}
\alias{RevoBenchmark}
\title{Returns the system time for a modified version of the Urbanek benchmarks.}
\usage{
RevoBenchmark(threads = 4, show.message = TRUE, scale.factor = 1)
}
\arguments{
\item{threads}{Number of Intel MKL threads to use if availalbe. Tests for the presence of the packages \code{RevoUtilsMath} or \code{RevoBase} and sets the number of threads using \code{RevoUtilsMath::setMKLthreads}}

\item{show.message}{If TRUE, shows interim results as console messages}

\item{scale.factor}{A numeric value that scales the size of the data up or down. The default value of 1 has data sizes that yields a runtime of ~2 seconds per test on an 8-core machine with the MKL available.  For quick and easy testing, reduce the \code{scale.factor} to less than 1. (The primary use case for low \code{scale.factor} is to reduce the unit testing time when testing the package itself on CRAN.) To scale out the test data, use \code{scale.factor} of greater than 1.}
}
\description{
Returns the system time for a modified version of the Urbanek benchmarks.
}
\seealso{
plot.RevoBenchmark
}

